@page "/adauga-subcontractor"
@using ProiectPractica.Models
@inject ProiectPractica.Data.ApplicationDbContext DbContext
@inject ILogger<AdaugaSubcontractor> Logger
<h2>Adaugă Subcontractor</h2>

@if (!string.IsNullOrEmpty(MesajEroare))
{
    <div class="alert alert-danger">@MesajEroare</div>
}

@if (!string.IsNullOrEmpty(MesajSucces))
{
    <div class="alert alert-success">@MesajSucces</div>
}

<EditForm Model="@SubcontractorModel" OnSubmit="@OnSubmit" FormName="AdaugaSubcontractorForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Nume</label>
        <InputText class="form-control" @bind-Value="SubcontractorModel.Nume" />
        <ValidationMessage For="@(() => SubcontractorModel.Nume)" />
    </div>

    <div class="mb-3">
        <label>Domeniu</label>
        <InputText class="form-control" @bind-Value="SubcontractorModel.Domeniu" />
        <ValidationMessage For="@(() => SubcontractorModel.Domeniu)" />
    </div>

    <div class="mb-3">
        <label>Email (opțional)</label>
        <InputText class="form-control" @bind-Value="SubcontractorModel.Email" />
    </div>

    <div class="mb-3">
        <label>Telefon (opțional)</label>
        <InputText class="form-control" @bind-Value="SubcontractorModel.Telefon" />
    </div>

    <button class="btn btn-primary" type="submit">Salvează</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private Subcontractor SubcontractorModel { get; set; } = new Subcontractor();

    private string? MesajEroare { get; set; }
    private string? MesajSucces { get; set; }

    private async Task OnSubmit()
    {
        MesajEroare = null;
        MesajSucces = null;

        try
        {
            Logger.LogInformation("Date introduse: Nume = {Nume}, Domeniu = {Domeniu}, Email = {Email}, Telefon = {Telefon}",
                SubcontractorModel.Nume, SubcontractorModel.Domeniu, SubcontractorModel.Email, SubcontractorModel.Telefon);

            DbContext.Subcontractori.Add(SubcontractorModel);
            await DbContext.SaveChangesAsync();

            MesajSucces = "Subcontractorul a fost adăugat cu succes!";

            // Resetăm formularul
            SubcontractorModel = new Subcontractor();
        }
        catch (Exception ex)
        {
            MesajEroare = $"A apărut o eroare la salvare: {ex.Message}";
            Logger.LogError(ex, "Eroare la salvarea subcontractorului");
        }
    }
}