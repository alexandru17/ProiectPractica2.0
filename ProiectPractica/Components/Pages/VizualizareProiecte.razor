@page "/vizualizare-proiecte"
@using ProiectPractica.Entities
@inject ProiectPractica.Data.ApplicationDbContext DbContext
@inject NavigationManager NavigationManager
@using ProiectPractica.Models
@inject ProiectPractica.Data.ApplicationDbContext DbContext
@inject IJSRuntime JSRuntime
@using Microsoft.EntityFrameworkCore

<h2>Listă Proiecte</h2>

<a class="btn btn-success" href="@NavigationManager.ToAbsoluteUri("/adauga-proiect")">
    <i class="bi bi-plus-circle"></i> Adaugă Proiect
</a>

@if (proiecte == null)
{
    <p>Se încarcă proiectele...</p>
}
else if (!proiecte.Any())
{
    <p>Nu există proiecte înregistrate.</p>
}
else
{

    <div class="row row-cols-1 row-cols-md-2 g-4">
        @foreach (var proiect in proiecte)
        {
            <div class="col">
                <div class="card shadow-sm border-primary">
                    <div class="card-body">
                        <h5 class="card-title">@proiect.NumeClient (@proiect.Cod)</h5>
                        <h6 class="card-subtitle mb-2 text-muted">@proiect.Domeniul</h6>
                        <p class="card-text">
                            <strong>Obiect:</strong> @proiect.ObiectulContractului<br />
                            <strong>Valoare:</strong> @proiect.ValoareContract.ToString("C")<br />
                            <strong>Status:</strong> @proiect.Status.ToString()<br />
                            <strong>Data semnare:</strong> @proiect.DataSemnareContract.ToShortDateString()<br />
                            <strong>Subcontractori:</strong> @(proiect.AreSubcontractor ? $"Da ({proiect.NumarSubcontractori})" : "Nu")
                        </p>

                        <a class="btn btn-sm btn-outline-primary"
                           href="@NavigationManager.ToAbsoluteUri($"/detalii-proiect/{proiect.Cod}")">
                            Vezi detalii
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>

       
}

@code {
    private List<ProiectEntity> proiecte = new();
    
    
    private void NavigheazaLaDetalii(int codProiect)
    {
        NavigationManager.NavigateTo($"/detalii-proiect/{codProiect}");
    }

    protected override async Task OnInitializedAsync()
    {
        proiecte = await DbContext.Proiecte.ToListAsync();

        Console.WriteLine("Proiecte încărcate: " + proiecte.Count);
        foreach (var p in proiecte)
        {
            Console.WriteLine($"Cod: {p.Cod}, Client: {p.NumeClient}, Domeniu: {p.Domeniul}");
        }
    }
    
}
