@page "/add-project"
@using ProiectPractica.Entities
@using ProiectPractica.Interfaces
@using ProiectPractica.Models
@using Microsoft.EntityFrameworkCore
@inject IRepository<ProjectEntity> repository

<h3>Add Project</h3>

<EditForm Model="@project" OnValidSubmit="SaveProject" FormName="AddProjectForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Nume Client</label>
        <InputText class="form-control" @bind-Value="project.Name" />
    </div>

    @* <div class="mb-3">
        <label>Domeniul proiectului</label>
        <InputText class="form-control" @bind-Value="project.Domain" />
    </div>

    <div class="mb-3">
        <label>Obiectul contractului</label>
        <InputText class="form-control" @bind-Value="project.ContractReason" />
    </div>

    <div class="mb-3">
        <label>Data Semnare</label>
        <InputDate class="form-control" @bind-Value="project.SignDate" />
    </div>

    <div class="mb-3">
        <label>Data Încheiere</label>
        <InputDate class="form-control" @bind-Value="project.ContractCloseDate" />
    </div>

    <div class="mb-3">
        <label>Valoare Contract</label>
        <InputNumber class="form-control" @bind-Value="project.ContractValue" />
        <ValidationMessage For="@(() => project.ContractValue)" />
    </div>

    <div class="mb-3">
        <label>Numar livrabile</label>
        <InputNumber class="form-control" @bind-Value="project.LivrablesCount" />
        <ValidationMessage For="@(() => project.LivrablesCount)" />
    </div>
    <div class="mb-3">
        <label>Status</label>
        <InputSelect class="form-select" @bind-Value="project.Status">
            @foreach (var status in Enum.GetValues<StatusProiect>())
            {
                <option value="@status">@status</option>
            }
        </InputSelect>
    </div>

    
    <div class="form-check mb-3">
        <InputCheckbox class="form-check-input" @bind-Value="project.IsPublicClient" />
        <label class="form-check-label">Este client public?</label>
    </div>

    <div class="form-check mb-3">
        <InputCheckbox class="form-check-input" @bind-Value="project.HasSubcontractors" />
        <label class="form-check-label">Are subcontractor?</label>
    </div>

    @if (project.HasSubcontractors)
    {
        <div class="mb-3">
            <label>Număr subcontractori</label>
            <InputNumber class="form-control" @bind-Value="project.NumberOfContractors" />
            <ValidationMessage For="@(() => project.NumberOfContractors)" />
        </div>
    }

    <div class="mb-3">
        <label>Responsabili (selectează unul sau mai mulți)</label>
        <InputSelectMultiple @bind="utilizatoriSelectati" class="form-select">
            @foreach (var user in allUsers)
            {
                <option value="@user.Id">@user.NumeComplet</option>
            }
        </InputSelectMultiple>
    </div> *@

    <button class="btn btn-primary" type="submit">Save</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    Project project { get; set; } = new();

    List<AppUser> allUsers = new();

    protected override async Task OnInitializedAsync()
    {
        
    }

    async Task SaveProject()
    {
        var entity = new ProjectEntity
        {
            Name = project.Name
        };

        await repository.AddAsync(entity);
        await repository.SaveAsync();
    }
}