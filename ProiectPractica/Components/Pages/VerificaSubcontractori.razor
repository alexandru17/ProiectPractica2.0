@page "/verificare-subcontractori"
@using ProiectPractica.Entities
@using ProiectPractica.Models
@inject ProiectPractica.Data.ApplicationDbContext DbContext
@inject NavigationManager Navigation
@inject Microsoft.Extensions.Logging.ILogger<VerificaSubcontractori> Logger
@inject IJSRuntime JSRuntime
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager

<h2>Listă Subcontractori</h2>

<a class="btn btn-success" href="@NavigationManager.ToAbsoluteUri("/adauga-subcontractor")">
    <i class="bi bi-plus-circle"></i> Adaugă Subcontractor
</a>


@if (subcontractori == null)
{
    <p>Se încarcă lista de subcontractori...</p>
}
else if (!subcontractori.Any())
{
    <p>Nu există subcontractori adăugați încă.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Nume</th>
                <th>Domeniu</th>
                <th>Email</th>
                <th>Telefon</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var subcontractor in subcontractori)
            {
                <tr>
                    <td>@subcontractor.Nume</td>
                    <td>@subcontractor.Domeniu</td>
                    <td>@subcontractor.Email</td>
                    <td>@subcontractor.Telefon</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<SubcontractorEntity> subcontractori = new();

    protected override async Task OnInitializedAsync()
    {
        subcontractori = await DbContext.Subcontractori.ToListAsync();
    }

    private async Task NavigheazaLaAdauga()
    {
        await Task.Yield();
        Navigation.NavigateTo("/adauga-subcontractor", true);
    }
}
